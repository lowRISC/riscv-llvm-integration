; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv32 -verify-machineinstrs -filetype=obj < %s \
; RUN:   -o /dev/null 2>&1
; RUN: llc -mtriple=riscv32 -verify-machineinstrs < %s | FileCheck %s

define void @relax_bcc(i1 %a) {
; CHECK-LABEL: relax_bcc:
; CHECK:       # BB#0:
; CHECK-NEXT:    andi a0, a0, 1
; CHECK-NEXT:    bne a0, zero, .LBB0_1
; CHECK-NEXT:    jal zero, .LBB0_2
; CHECK-NEXT:  .LBB0_1: # %iftrue
; CHECK-NEXT:    #APP
; CHECK-NEXT:    .space 4096
; CHECK-NEXT:    #NO_APP
; CHECK-NEXT:  .LBB0_2: # %tail
; CHECK-NEXT:    jalr zero, ra, 0
  br i1 %a, label %iftrue, label %tail

iftrue:
  call void asm sideeffect ".space 4096", ""()
  br label %tail

tail:
  ret void
}

define i32 @relax_jal(i1 %a) {
; CHECK-LABEL: relax_jal:
; CHECK:       # BB#0:
; CHECK-NEXT:    andi a0, a0, 1
; CHECK-NEXT:    bne a0, zero, .LBB1_1
; CHECK-NEXT:  # BB#3:
; CHECK-NEXT:    lui a0, %hi(.LBB1_2)
; CHECK-NEXT:    jalr zero, a0, %lo(.LBB1_2)
; CHECK-NEXT:  .LBB1_1: # %iftrue
; CHECK-NEXT:    #APP
; CHECK-NEXT:    #NO_APP
; CHECK-NEXT:    #APP
; CHECK-NEXT:    .space 1048576
; CHECK-NEXT:    #NO_APP
; CHECK-NEXT:    addi a0, zero, 1
; CHECK-NEXT:    jalr zero, ra, 0
; CHECK-NEXT:  .LBB1_2: # %jmp
; CHECK-NEXT:    #APP
; CHECK-NEXT:    #NO_APP
; CHECK-NEXT:    addi a0, zero, 1
; CHECK-NEXT:    jalr zero, ra, 0
  br i1 %a, label %iftrue, label %jmp

jmp:
  call void asm sideeffect "", ""()
  br label %tail

iftrue:
  call void asm sideeffect "", ""()
  br label %space

space:
  call void asm sideeffect ".space 1048576", ""()
  br label %tail

tail:
  ret i32 1
}
